// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: proto/document_process.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`                            // The document content as binary data
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                          // The filename
	ContentType   string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // MIME type like "application/pdf"
	DocumentId    string                 `protobuf:"bytes,4,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`    // Unique ID for the document
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessRequest) Reset() {
	*x = ProcessRequest{}
	mi := &file_proto_document_process_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRequest) ProtoMessage() {}

func (x *ProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_document_process_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRequest.ProtoReflect.Descriptor instead.
func (*ProcessRequest) Descriptor() ([]byte, []int) {
	return file_proto_document_process_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ProcessRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ProcessRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *ProcessRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

type ProcessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"` // The ID of the processed document
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                           // Status like "completed", "failed"
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`                             // Error message if any
	Chunks        []*ProcessedChunk      `protobuf:"bytes,4,rep,name=chunks,proto3" json:"chunks,omitempty"`                           // Processed text chunks with embeddings
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessResponse) Reset() {
	*x = ProcessResponse{}
	mi := &file_proto_document_process_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessResponse) ProtoMessage() {}

func (x *ProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_document_process_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessResponse.ProtoReflect.Descriptor instead.
func (*ProcessResponse) Descriptor() ([]byte, []int) {
	return file_proto_document_process_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessResponse) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *ProcessResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ProcessResponse) GetChunks() []*ProcessedChunk {
	if x != nil {
		return x.Chunks
	}
	return nil
}

type ProcessedChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`              // The text segment
	Vector        []float32              `protobuf:"fixed32,2,rep,packed,name=vector,proto3" json:"vector,omitempty"` // The embedding vector
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessedChunk) Reset() {
	*x = ProcessedChunk{}
	mi := &file_proto_document_process_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessedChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedChunk) ProtoMessage() {}

func (x *ProcessedChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_document_process_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessedChunk.ProtoReflect.Descriptor instead.
func (*ProcessedChunk) Descriptor() ([]byte, []int) {
	return file_proto_document_process_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessedChunk) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ProcessedChunk) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

var File_proto_document_process_proto protoreflect.FileDescriptor

const file_proto_document_process_proto_rawDesc = "" +
	"\n" +
	"\x1cproto/document_process.proto\x12\bdocument\"\x8a\x01\n" +
	"\x0eProcessRequest\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12\x1f\n" +
	"\vdocument_id\x18\x04 \x01(\tR\n" +
	"documentId\"\x92\x01\n" +
	"\x0fProcessResponse\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x120\n" +
	"\x06chunks\x18\x04 \x03(\v2\x18.document.ProcessedChunkR\x06chunks\"<\n" +
	"\x0eProcessedChunk\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x16\n" +
	"\x06vector\x18\x02 \x03(\x02R\x06vector2b\n" +
	"\x18DocumentProcessorService\x12F\n" +
	"\x0fProcessDocument\x12\x18.document.ProcessRequest\x1a\x19.document.ProcessResponseB4Z2github.com/ozgurnsahin/document-processor-pp/protob\x06proto3"

var (
	file_proto_document_process_proto_rawDescOnce sync.Once
	file_proto_document_process_proto_rawDescData []byte
)

func file_proto_document_process_proto_rawDescGZIP() []byte {
	file_proto_document_process_proto_rawDescOnce.Do(func() {
		file_proto_document_process_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_document_process_proto_rawDesc), len(file_proto_document_process_proto_rawDesc)))
	})
	return file_proto_document_process_proto_rawDescData
}

var file_proto_document_process_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_document_process_proto_goTypes = []any{
	(*ProcessRequest)(nil),  // 0: document.ProcessRequest
	(*ProcessResponse)(nil), // 1: document.ProcessResponse
	(*ProcessedChunk)(nil),  // 2: document.ProcessedChunk
}
var file_proto_document_process_proto_depIdxs = []int32{
	2, // 0: document.ProcessResponse.chunks:type_name -> document.ProcessedChunk
	0, // 1: document.DocumentProcessorService.ProcessDocument:input_type -> document.ProcessRequest
	1, // 2: document.DocumentProcessorService.ProcessDocument:output_type -> document.ProcessResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_document_process_proto_init() }
func file_proto_document_process_proto_init() {
	if File_proto_document_process_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_document_process_proto_rawDesc), len(file_proto_document_process_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_document_process_proto_goTypes,
		DependencyIndexes: file_proto_document_process_proto_depIdxs,
		MessageInfos:      file_proto_document_process_proto_msgTypes,
	}.Build()
	File_proto_document_process_proto = out.File
	file_proto_document_process_proto_goTypes = nil
	file_proto_document_process_proto_depIdxs = nil
}
